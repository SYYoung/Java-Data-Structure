package Facebook;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;

import graph.CapGraph;
import util.GraphLoader;

public class Friend {
	CapGraph socialGraph;
	
	public Friend() {
		socialGraph = new CapGraph();
	}
	
	public Friend(String fname) {
		socialGraph = new CapGraph();
		GraphLoader.loadGraph(socialGraph, fname);
	}
	
	public HashMap<Integer, HashSet<Integer>> recommendFriendL(int user) {
		// get the friend list of user
		HashMap<Integer, HashSet<Integer>> nodeMap = socialGraph.exportGraph();
		Set<Integer> neighbor = nodeMap.get(user);
		HashMap<Integer, HashSet<Integer>> recFriendL = 
				new HashMap<Integer, HashSet<Integer>>();
		for (int person : neighbor) {
			recFriendL.put(person, new HashSet<Integer>());
			for (int another: neighbor) {
				if ((!nodeMap.get(person).contains(another)) &&
						(person != another)) 
					recFriendL.get(person).add(another);
			}
		}
		return recFriendL;
	}
	
	public void hasMostFriend() {
		HashMap<Integer, HashSet<Integer>> nodeMap = socialGraph.exportGraph();
		HashMap<Integer, Integer> friendNum = new HashMap<Integer, Integer>();
		for (int person : nodeMap.keySet()) 
			friendNum.put(person, nodeMap.get(person).size());
		ArrayList<Integer> val = (ArrayList<Integer>) friendNum.values();
		int maxVal = Collections.max(val);
		System.out.println("User " +val.indexOf(maxVal) +" has most friends: " +
					maxVal);
	}
	
	public static void main(String[] args) {
		String fname1 = "data/scc/test_2.txt";
		String fname2 = "data/facebook_1000.txt";
		Friend myFriend = new Friend(fname2);
		int user = 732;
		HashMap<Integer, HashSet<Integer>> recList = 
							myFriend.recommendFriendL(user);
		System.out.println("The recommended friend among user " +user);
		for (int person : recList.keySet())
			System.out.println(person + ":\t" +recList.get(person));
		
		myFriend.hasMostFriend();
	}
}
