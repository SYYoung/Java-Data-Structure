import edu.princeton.cs.algs4.*;

public class EdgeWeightedGraph {
	private final int V;
	private final Bag<Edge>[] adj;
	
	public EdgeWeightedGraph(int V) {
		this.V = V;
		adj = (Bag<Edge>[])new Bag[V];
		for (int v = 0; v < V; v++)
			adj[v] = new Bag<Edge>();
	}
	
	public EdgeWeightedGraph(In in) {
		this.V = in.readInt();
        for (int v = 0; v < V; v++) {
            adj[v] = new Bag<Edge>();
        }
        int E = in.readInt();
        for (int i = 0; i < E; i++) {
            int v = in.readInt();
            int w = in.readInt();
            int weight = in.readInt();
            addEdge(v, w, weight); 
        }
	}
	
	public void addEdge(Edge e) {
		int v = e.either();
		int w = e.other(v);
		adj[v].add(e);
		adj[w].add(e);
	}
	
	public Iterable<Edge> adj(int v) {
		
	}
	
	public Iterable<Edge> edges() {
		
	}
	
	public int V() {
		
	}
	
	public int E() {
		
	}
	
	public String toString() {
		
	}
}
